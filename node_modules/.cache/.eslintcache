[{"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\index.tsx":"1","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\reportWebVitals.ts":"2","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\App.tsx":"3","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\store\\store.ts":"4","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx":"5","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\paginas\\login\\Login.tsx":"6","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\paginas\\home\\Home.tsx":"7","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\estaticos\\navbar\\Navbar.tsx":"8","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\estaticos\\footer\\Footer.tsx":"9","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\temas\\listatema\\ListaTema.tsx":"10","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\temas\\cadastroTema\\CadastroTema.tsx":"11","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\listapostagem\\ListaPostagem.tsx":"12","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\temas\\deletarTema\\DeletarTema.tsx":"13","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\cadastroPost\\CadastroPost.tsx":"14","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\deletarPostagem\\DeletarPostagem.tsx":"15","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\store\\tokens\\tokensReducer.ts":"16","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\store\\tokens\\actions.ts":"17","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\services\\Service.ts":"18","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\tabpostagem\\TabPostagem.tsx":"19","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\modalPostagem\\ModalPostagem.tsx":"20","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\index.tsx":"21","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\reportWebVitals.ts":"22","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\App.tsx":"23","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\store\\store.ts":"24","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\paginas\\home\\Home.tsx":"25","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\paginas\\login\\Login.tsx":"26","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx":"27","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\estaticos\\navbar\\Navbar.tsx":"28","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\estaticos\\footer\\Footer.tsx":"29","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\temas\\deletarTema\\DeletarTema.tsx":"30","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\temas\\cadastroTema\\CadastroTema.tsx":"31","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\temas\\listatema\\ListaTema.tsx":"32","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\cadastroPost\\CadastroPost.tsx":"33","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\listapostagem\\ListaPostagem.tsx":"34","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\deletarPostagem\\DeletarPostagem.tsx":"35","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\store\\tokens\\tokensReducer.ts":"36","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\store\\tokens\\actions.ts":"37","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\services\\Service.ts":"38","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\tabpostagem\\TabPostagem.tsx":"39","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\modalPostagem\\ModalPostagem.tsx":"40"},{"size":517,"mtime":1647271726869,"results":"41","hashOfConfig":"42"},{"size":440,"mtime":1647271726869,"results":"43","hashOfConfig":"42"},{"size":2463,"mtime":1647271726866,"results":"44","hashOfConfig":"42"},{"size":159,"mtime":1647271726869,"results":"45","hashOfConfig":"42"},{"size":4371,"mtime":1647271726869,"results":"46","hashOfConfig":"42"},{"size":4152,"mtime":1647271726869,"results":"47","hashOfConfig":"42"},{"size":2559,"mtime":1647271726869,"results":"48","hashOfConfig":"42"},{"size":3157,"mtime":1647271726866,"results":"49","hashOfConfig":"42"},{"size":2370,"mtime":1647272315069,"results":"50","hashOfConfig":"42"},{"size":2550,"mtime":1647271726869,"results":"51","hashOfConfig":"42"},{"size":4052,"mtime":1647271726869,"results":"52","hashOfConfig":"42"},{"size":2977,"mtime":1647271726869,"results":"53","hashOfConfig":"42"},{"size":3240,"mtime":1647271726869,"results":"54","hashOfConfig":"42"},{"size":5600,"mtime":1647271726868,"results":"55","hashOfConfig":"42"},{"size":3244,"mtime":1647271726868,"results":"56","hashOfConfig":"42"},{"size":389,"mtime":1647271726869,"results":"57","hashOfConfig":"42"},{"size":164,"mtime":1647271726869,"results":"58","hashOfConfig":"42"},{"size":1287,"mtime":1647272403044,"results":"59","hashOfConfig":"42"},{"size":1943,"mtime":1647271726869,"results":"60","hashOfConfig":"42"},{"size":1804,"mtime":1647271726869,"results":"61","hashOfConfig":"42"},{"size":517,"mtime":1647271726869,"results":"62","hashOfConfig":"63"},{"size":440,"mtime":1647271726869,"results":"64","hashOfConfig":"63"},{"size":2463,"mtime":1647271726866,"results":"65","hashOfConfig":"63"},{"size":159,"mtime":1647271726869,"results":"66","hashOfConfig":"63"},{"size":2537,"mtime":1647348676051,"results":"67","hashOfConfig":"63"},{"size":4152,"mtime":1647271726869,"results":"68","hashOfConfig":"63"},{"size":4371,"mtime":1647271726869,"results":"69","hashOfConfig":"63"},{"size":3202,"mtime":1647348264338,"results":"70","hashOfConfig":"63"},{"size":2165,"mtime":1647348557122,"results":"71","hashOfConfig":"63"},{"size":3240,"mtime":1647271726869,"results":"72","hashOfConfig":"63"},{"size":4052,"mtime":1647271726869,"results":"73","hashOfConfig":"63"},{"size":2550,"mtime":1647271726869,"results":"74","hashOfConfig":"63"},{"size":5600,"mtime":1647271726868,"results":"75","hashOfConfig":"63"},{"size":2977,"mtime":1647271726869,"results":"76","hashOfConfig":"63"},{"size":3244,"mtime":1647271726868,"results":"77","hashOfConfig":"63"},{"size":389,"mtime":1647271726869,"results":"78","hashOfConfig":"63"},{"size":164,"mtime":1647271726869,"results":"79","hashOfConfig":"63"},{"size":1287,"mtime":1647272403044,"results":"80","hashOfConfig":"63"},{"size":1943,"mtime":1647271726869,"results":"81","hashOfConfig":"63"},{"size":1804,"mtime":1647271726869,"results":"82","hashOfConfig":"63"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"5pdxhe",{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"106","usedDeprecatedRules":"85"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"85"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"1y2nmtl",{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"137"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"137"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"137"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"137"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"137"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"137"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"137"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"137"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\index.tsx",[],["177","178"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\reportWebVitals.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\App.tsx",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\store\\store.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx",["179","180","181"],"import React , {useState, useEffect, ChangeEvent } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport User from '../../models/User';\r\nimport { cadastroUsuario } from '../../services/Service';\r\nimport { Grid, Box, Typography, Button, TextField } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport './CadastroUsuario.css';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CadastroUsuario() {\r\n\r\n    let history = useHistory();\r\n    const [confirmarSenha,setConfirmarSenha] = useState<String>(\"\")\r\n    const [user, setUser] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: ''\r\n        })\r\n\r\n    const [userResult, setUserResult] = useState<User>(\r\n        {\r\n            id: 0,\r\n            nome: '',\r\n            usuario: '',\r\n            senha: ''\r\n        })\r\n\r\n    useEffect(() => {\r\n        if (userResult.id != 0) {\r\n            history.push(\"/login\")\r\n        }\r\n    }, [userResult])\r\n\r\n\r\n    function confirmarSenhaHandle(e: ChangeEvent<HTMLInputElement>){\r\n        setConfirmarSenha(e.target.value)\r\n    }\r\n\r\n\r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n        if(confirmarSenha == user.senha){\r\n        cadastroUsuario(`/usuarios/cadastrar`, user, setUserResult)\r\n        toast.success('Usuario cadastrado com sucesso', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n            });\r\n        }else{\r\n            toast.error('Dados inconsistentes. Favor verificar as informações de cadastro.', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <Grid container direction='row' justifyContent='center' alignItems='center'>\r\n            <Grid item xs={6} className='imagem2'></Grid>\r\n            <Grid item xs={6} alignItems='center'>\r\n                <Box paddingX={10}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='textos2'>Cadastrar</Typography>\r\n                        <TextField value={user.nome} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='nome' label='nome' variant='outlined' name='nome' margin='normal' fullWidth />\r\n                        <TextField value={user.usuario} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}id='usuario' label='usuario' variant='outlined' name='usuario' margin='normal'fullWidth />\r\n                        <TextField value={user.senha} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)}id='senha' label='senha' variant='outlined' name='senha' margin='normal' type='password' fullWidth />\r\n                        <TextField value={confirmarSenha} onChange={(e: ChangeEvent<HTMLInputElement>) => confirmarSenhaHandle(e)}id='confirmarSenha' label='confirmarSenha' variant='outlined' name='confirmarSenha' margin='normal' type='password' fullWidth />\r\n                        <Box marginTop={2} textAlign='center'>\r\n                            <Link to='/login' className='text-decorator-none'>\r\n                                <Button variant='contained' color='secondary' className='btnCancelar'>\r\n                                    Cancelar\r\n                                </Button>\r\n                            </Link>\r\n                            <Button type='submit' variant='contained' color='primary'>\r\n                                    Cadastrar\r\n                            </Button>\r\n                        </Box>\r\n                    </form>\r\n                </Box>\r\n            </Grid>\r\n\r\n\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default CadastroUsuario;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\paginas\\login\\Login.tsx",["182","183"],"import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport { Grid, Box, Typography, TextField, Button } from '@material-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { login } from '../../services/Service';\r\nimport UserLogin from '../../models/UserLogin';\r\nimport './Login.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToken } from \"../../store/tokens/actions\";\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Login() {\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [token, setToken] = useState('');\r\n    const [userLogin, setUserLogin] = useState<UserLogin>(\r\n        {\r\n            id: 0,\r\n            usuario: '',\r\n            senha: '',\r\n            token: ''\r\n        }\r\n        )\r\n\r\n        function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setUserLogin({\r\n                ...userLogin,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n\r\n            useEffect(()=>{\r\n                if(token != ''){\r\n                    dispatch(addToken(token));\r\n                    history.push('/home')\r\n                }\r\n            }, [token])\r\n\r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n            e.preventDefault();\r\n            try{\r\n                await login(`/usuarios/logar`, userLogin, setToken)\r\n                toast.success('Usuário logado com sucesso!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            }catch(error){\r\n                toast.error('Dados do usuário inconsistentes. Erro ao logar!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            }\r\n        }\r\n\r\n    return (\r\n        <Grid container direction='row' justifyContent='center' alignItems='center'>\r\n            <Grid alignItems='center' xs={6}>\r\n                <Box paddingX={20}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <Typography variant='h3' gutterBottom color='textPrimary' component='h3' align='center' className='textos1'>Entrar</Typography>\r\n                        <TextField value={userLogin.usuario} onChange={(e:ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='usuario' label='usuário' variant='outlined' name='usuario' margin='normal' fullWidth />\r\n                        <TextField value={userLogin.senha} onChange={(e:ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='senha' label='senha' variant='outlined' name='senha' margin='normal' type='password'fullWidth />\r\n                        <Box marginTop={2} textAlign='center'>\r\n                                <Button type='submit' variant='contained' color='primary'>\r\n                                    Logar\r\n                                </Button>\r\n                        </Box>\r\n                    </form>\r\n                    <Box display='flex' justifyContent='center' marginTop={2}>\r\n                        <Box marginRight={1}>\r\n                            <Typography variant='subtitle1' gutterBottom align='center'>Não tem uma conta?</Typography>\r\n                        </Box>\r\n                        <Link to='/cadastrousuario'>\r\n                            <Typography variant='subtitle1' gutterBottom align='center' className='textos1'>Cadastre-se</Typography>\r\n                        </Link>\r\n                            \r\n                    </Box>\r\n                </Box>\r\n            </Grid>\r\n            <Grid xs={6} className='imagem'>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\paginas\\home\\Home.tsx",["184","185"],"import React, { useEffect } from 'react';\r\nimport {Typography, Box, Grid, Button} from '@material-ui/core';\r\nimport TabPostagem from '../../components/postagens/tabpostagem/TabPostagem';\r\nimport ModalPostagem from '../../components/postagens/modalPostagem/ModalPostagem';\r\nimport './Home.css';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../store/tokens/tokensReducer';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Home() {\r\n\r\n    let history = useHistory();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n    \r\n    useEffect(() => {\r\n      if (token == \"\") {\r\n        toast.error('Você precisa estar logado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });\r\n          history.push(\"/login\")\r\n  \r\n      }\r\n  }, [token])\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" className='caixa'>\r\n                <Grid alignItems=\"center\" item xs={6}>\r\n                    <Box paddingX={20} >\r\n                        <Typography variant=\"h3\" gutterBottom color=\"textPrimary\" component=\"h3\" align=\"center\" className='titulo'>Seja bem vindo(a)!</Typography>\r\n                        <Typography variant=\"h5\" gutterBottom color=\"textPrimary\" component=\"h5\" align=\"center\" className='titulo'>expresse aqui os seus pensamentos e opiniões!</Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        <Box marginRight={1}>\r\n                            <ModalPostagem />\r\n                        </Box>\r\n                        <Link to=\"/posts\" className=\"text-decorator-none\">\r\n                            <Button variant=\"outlined\" className='botao'>Ver Postagens</Button>\r\n                        </Link>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6} >\r\n                    <img src=\"https://i.imgur.com/H88yIo2.png\" alt=\"\" width=\"500px\" height=\"500px\" />\r\n                </Grid>\r\n                <Grid xs={12} className='postagens'>\r\n                    <TabPostagem />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\estaticos\\navbar\\Navbar.tsx",["186"],"import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Box } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory } from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToken } from '../../../store/tokens/actions';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction Navbar() {\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    function goLogout(){\r\n        dispatch(addToken(''));\r\n        toast.info('Usuário deslogado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });\r\n        history.push('/login')\r\n    }\r\n\r\n    var navbarComponent;\r\n\r\n    if(token != \"\"){\r\n        navbarComponent = <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n            <Box className='cursor'>\r\n                <Typography variant=\"h5\" color=\"inherit\">\r\n                    BlogPessoal\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box display=\"flex\" justifyContent=\"start\">\r\n                <Link to=\"/home\" className=\"text-decorator-none\">\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            home\r\n                        </Typography>\r\n                    </Box>\r\n                </Link>\r\n                <Link to=\"/posts\" className=\"text-decorator-none\">\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            postagens\r\n                        </Typography>\r\n                    </Box>\r\n                </Link>\r\n                <Link to=\"/temas\" className=\"text-decorator-none\">\r\n                <Box mx={1} className='cursor'>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        temas\r\n                    </Typography>\r\n                </Box>\r\n                </Link>\r\n                <Link to=\"/formularioTema\" className=\"text-decorator-none\">\r\n                <Box mx={1} className='cursor'>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        cadastrar tema\r\n                    </Typography>\r\n                </Box>\r\n                </Link>\r\n              \r\n                    <Box mx={1} className='cursor' onClick={goLogout}>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            logout\r\n                        </Typography>\r\n                    </Box>\r\n                \r\n            </Box>\r\n\r\n        </Toolbar>\r\n    </AppBar>\r\n    }\r\n    return (\r\n        <>\r\n            {navbarComponent}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\estaticos\\footer\\Footer.tsx",["187","188","189","190","191"],"import React from 'react';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport {Typography, Box, Grid } from '@material-ui/core';\r\nimport './Footer.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\n\r\nfunction Footer() {\r\n\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    );\r\n\r\n    var footerComponent;\r\n\r\n    if(token != \"\"){\r\n        footerComponent = <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Grid alignItems=\"center\" item xs={12}>\r\n            <Box className='box1'>\r\n                <Box paddingTop={1} display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                    <Typography variant=\"h5\" align=\"center\" gutterBottom className='textos'>Siga-nos nas redes sociais </Typography>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                    <a href=\"https://www.facebook.com/generationbrasil\" target=\"_blank\">\r\n                        <FacebookIcon className='redes' />\r\n                    </a>\r\n                    <a href=\"https://www.instagram.com/generationbrasil/\" target=\"_blank\">\r\n                        <InstagramIcon className='redes' />\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/school/generationbrasil/\" target=\"_blank\">\r\n                        <LinkedInIcon className='redes' />\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n            <Box className='box2'>\r\n                <Box paddingTop={1}>\r\n                    <Typography variant=\"subtitle2\" align=\"center\" gutterBottom className='textos' >© 2020 Copyright:</Typography>\r\n                </Box>\r\n                <Box>\r\n                    <a target=\"_blank\" href=\"https://brasil.generation.org\">\r\n                        <Typography variant=\"subtitle2\" gutterBottom className='textos' align=\"center\">brasil.generation.org</Typography>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    </Grid>\r\n    }\r\n    return (\r\n        <>\r\n            {footerComponent}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\temas\\listatema\\ListaTema.tsx",["192","193","194"],"import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Box, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport Tema from '../../../models/Tema';\r\nimport './ListaTema.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { busca } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ListaTema() {\r\n  const [temas, setTemas] = useState<Tema[]>([])\r\n  let history = useHistory();\r\n  const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n  );\r\n\r\n  useEffect(()=>{\r\n    if(token == ''){\r\n      toast.error('Você precisa estar logado', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme: \"colored\",\r\n        progress: undefined,\r\n        });\r\n      history.push(\"/login\")\r\n    }\r\n  }, [token])\r\n\r\n\r\n  async function getTema(){\r\n    await busca(\"/tema\", setTemas, {\r\n      headers: {\r\n        'Authorization': token\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    getTema()\r\n  }, [temas.length])\r\n\r\n  return (\r\n    <>\r\n    {\r\n      temas.map(tema =>(\r\n      <Box m={2} >\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Tema\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n             {tema.descricao}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1.5} >\r\n\r\n              <Link to={`/formularioTema/${tema.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                    atualizar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n              <Link to={`/deletarTema/${tema.id}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                    deletar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n      ))\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default ListaTema;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\temas\\cadastroTema\\CadastroTema.tsx",["195","196","197"],"import React, {useState, useEffect, ChangeEvent} from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport {useHistory, useParams } from 'react-router-dom'\r\nimport './CadastroTema.css';\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction CadastroTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n                });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/tema/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function updatedTema(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setTema({\r\n                ...tema,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n    \r\n        }\r\n        \r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            console.log(\"tema \" + JSON.stringify(tema))\r\n    \r\n            if (id !== undefined) {\r\n                console.log(tema)\r\n                put(`/tema`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                toast.success('Tema atualizado com sucesso', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            } else {\r\n                post(`/tema`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                toast.success('Tema cadastrado com sucesso', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            }\r\n            back()\r\n    \r\n        }\r\n    \r\n        function back() {\r\n            history.push('/temas')\r\n        }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro tema</Typography>\r\n                <TextField value={tema.descricao} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)} id=\"descricao\" label=\"descricao\" variant=\"outlined\" name=\"descricao\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\listapostagem\\ListaPostagem.tsx",["198","199","200"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca } from '../../../services/Service'\r\nimport { Box, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport './ListaPostagem.css';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ListaPostagem() {\r\n  const [posts, setPosts] = useState<Postagem[]>([])\r\n  let history = useHistory();\r\n  const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (token == \"\") {\r\n      toast.error('Você precisa estar logado', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: false,\r\n        draggable: false,\r\n        theme: \"colored\",\r\n        progress: undefined,\r\n    });\r\n      history.push(\"/login\")\r\n\r\n    }\r\n  }, [token])\r\n\r\n  async function getPost() {\r\n    await busca(\"/postagens\", setPosts, {\r\n      headers: {\r\n        'Authorization': token\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    getPost()\r\n\r\n  }, [posts.length])\r\n\r\n  return (\r\n    <>\r\n      {\r\n        posts.map(post => (\r\n          <Box m={2} >\r\n            <Card variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Postagens\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {post.titulo}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {post.texto}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  {post.tema?.descricao}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Box display=\"flex\" justifyContent=\"center\" mb={1.5}>\r\n\r\n                  <Link to={`/formularioPostagem/${post.id}`} className=\"text-decorator-none\" >\r\n                    <Box mx={1}>\r\n                      <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                        atualizar\r\n                      </Button>\r\n                    </Box>\r\n                  </Link>\r\n                  <Link to={`/deletarPostagem/${post.id}`} className=\"text-decorator-none\">\r\n                    <Box mx={1}>\r\n                      <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                        deletar\r\n                      </Button>\r\n                    </Box>\r\n                  </Link>\r\n                </Box>\r\n              </CardActions>\r\n            </Card>\r\n          </Box>\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ListaPostagem;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\temas\\deletarTema\\DeletarTema.tsx",["201","202","203"],"import React, { useEffect, useState } from 'react'\r\nimport {Box, Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\r\nimport './DeletarTema.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport Tema from '../../../models/Tema';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction DeletarTema() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n      (state) => state.tokens\r\n    );\r\n    const [tema, setTema] = useState<Tema>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          toast.error('Você precisa estar logado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n            });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/tema/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/temas')\r\n            deleteId(`/tema/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            toast.success('Tema deletado com sucesso', {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined,\r\n              });\r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/temas')\r\n          }\r\n          \r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar o Tema:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {tema?.descricao}\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n                <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                  Sim\r\n                </Button>\r\n              </Box>\r\n              <Box mx={2}>\r\n                <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                  Não\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarTema;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\cadastroPost\\CadastroPost.tsx",["204","205","206","207"],"import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\"\r\nimport './CadastroPost.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Tema from '../../../models/Tema';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca, buscaId, post, put } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction CadastroPost() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{ id: string }>();\r\n    const [temas, setTemas] = useState<Tema[]>([])\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            toast.error('Você precisa estar logado', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n            history.push(\"/login\")\r\n\r\n        }\r\n    }, [token])\r\n\r\n    const [tema, setTema] = useState<Tema>(\r\n        {\r\n            id: 0,\r\n            descricao: ''\r\n        })\r\n    const [postagem, setPostagem] = useState<Postagem>({\r\n        id: 0,\r\n        titulo: '',\r\n        texto: '',\r\n        tema: null\r\n    })\r\n\r\n    useEffect(() => { \r\n        setPostagem({\r\n            ...postagem,\r\n            tema: tema\r\n        })\r\n    }, [tema])\r\n\r\n    useEffect(() => {\r\n        getTemas()\r\n        if (id !== undefined) {\r\n            findByIdPostagem(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function getTemas() {\r\n        await busca(\"/tema\", setTemas, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function findByIdPostagem(id: string) {\r\n        await buscaId(`postagens/${id}`, setPostagem, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedPostagem(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setPostagem({\r\n            ...postagem,\r\n            [e.target.name]: e.target.value,\r\n            tema: tema\r\n        })\r\n\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (id !== undefined) {\r\n            put(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Postagem atualizada com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            post(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Postagem cadastrada com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n        }\r\n        back()\r\n\r\n    }\r\n\r\n    function back() {\r\n        history.push('/posts')\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro postagem</Typography>\r\n                <TextField value={postagem.titulo} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"titulo\" label=\"titulo\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\r\n                <TextField value={postagem.texto} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)} id=\"texto\" label=\"texto\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n\r\n                <FormControl >\r\n                    <InputLabel id=\"demo-simple-select-helper-label\">Tema </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        onChange={(e) => buscaId(`/tema/${e.target.value}`, setTema, {\r\n                            headers: {\r\n                                'Authorization': token\r\n                            }\r\n                        })}>\r\n                        {\r\n                            temas.map(tema => (\r\n                                <MenuItem value={tema.id}>{tema.descricao}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                    <FormHelperText>Escolha um tema para a postagem</FormHelperText>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Finalizar\r\n                    </Button>\r\n                </FormControl>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default CadastroPost;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\deletarPostagem\\DeletarPostagem.tsx",["208","209","210"],"import React, { useEffect, useState } from 'react'\r\nimport {Typography, Button, Box, Card, CardActions, CardContent } from \"@material-ui/core\"\r\nimport './DeletarPostagem.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { buscaId, deleteId } from '../../../services/Service';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction DeletarPostagem() {\r\n    let history = useHistory();\r\n    const { id } = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n      (state) => state.tokens\r\n    );\r\n    const [post, setPosts] = useState<Postagem>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          toast.error('Você precisa estar logado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });\r\n            history.push(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/postagens/${id}`, setPosts, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            history.push('/posts')\r\n            deleteId(`/postagens/${id}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n            toast.success('Postagem deletada com sucesso', {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined,\r\n          });\r\n          }\r\n        \r\n          function nao() {\r\n            history.push('/posts')\r\n          }\r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\" >\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar a Postagem:\r\n              </Typography>\r\n              <Typography color=\"textSecondary\" >\r\n              {post?.titulo}\r\n              </Typography>\r\n            </Box>\r\n\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n              <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                Sim\r\n              </Button>\r\n              </Box>\r\n              <Box>\r\n              <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                Não\r\n              </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarPostagem;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\store\\tokens\\tokensReducer.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\store\\tokens\\actions.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\services\\Service.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\tabpostagem\\TabPostagem.tsx",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\scferreira\\ReactBlogDeploy\\src\\components\\postagens\\modalPostagem\\ModalPostagem.tsx",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\index.tsx",[],["211","212"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\reportWebVitals.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\App.tsx",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\store\\store.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\paginas\\home\\Home.tsx",["213","214"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\paginas\\login\\Login.tsx",["215","216"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx",["217","218","219"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\estaticos\\navbar\\Navbar.tsx",["220"],"import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Box } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport {useHistory } from 'react-router-dom'\r\nimport './Navbar.css'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addToken } from '../../../store/tokens/actions';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction Navbar() {\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n      );\r\n    let history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    function goLogout(){\r\n        dispatch(addToken(''));\r\n        toast.info('Usuário deslogado', {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined,\r\n        });\r\n        history.push('/login')\r\n    }\r\n\r\n    var navbarComponent;\r\n\r\n    if(token != \"\"){\r\n        navbarComponent = <AppBar position=\"static\" className='box4'>\r\n        <Toolbar variant=\"dense\">\r\n            <Box className='cursor'>\r\n                <Typography variant=\"h5\" color=\"inherit\">\r\n                    BlogPessoal de um Avenger\r\n                </Typography>\r\n            </Box>\r\n            \r\n\r\n            <Box display=\"flex\" justifyContent=\"start\">\r\n                <Link to=\"/home\" className=\"text-decorator-none\">\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            Home\r\n                        </Typography>\r\n                    </Box>\r\n                </Link>\r\n                <Link to=\"/posts\" className=\"text-decorator-none\">\r\n                    <Box mx={1} className='cursor'>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            Postagens\r\n                        </Typography>\r\n                    </Box>\r\n                </Link>\r\n                <Link to=\"/temas\" className=\"text-decorator-none\">\r\n                <Box mx={1} className='cursor'>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        Temas\r\n                    </Typography>\r\n                </Box>\r\n                </Link>\r\n                <Link to=\"/formularioTema\" className=\"text-decorator-none\">\r\n                <Box mx={1} className='cursor'>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        Cadastrar tema\r\n                    </Typography>\r\n                </Box>\r\n                </Link>\r\n              \r\n                    <Box mx={1} className='cursor' onClick={goLogout}>\r\n                        <Typography variant=\"h6\" color=\"inherit\">\r\n                            Logout\r\n                        </Typography>\r\n                    </Box>\r\n                \r\n            </Box>\r\n\r\n        </Toolbar>\r\n    </AppBar>\r\n    }\r\n    return (\r\n        <>\r\n            {navbarComponent}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\estaticos\\footer\\Footer.tsx",["221","222","223","224","225"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\temas\\deletarTema\\DeletarTema.tsx",["226","227","228"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\temas\\cadastroTema\\CadastroTema.tsx",["229","230","231"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\temas\\listatema\\ListaTema.tsx",["232","233","234"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\cadastroPost\\CadastroPost.tsx",["235","236","237","238"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\listapostagem\\ListaPostagem.tsx",["239","240","241"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\deletarPostagem\\DeletarPostagem.tsx",["242","243","244"],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\store\\tokens\\tokensReducer.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\store\\tokens\\actions.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\services\\Service.ts",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\tabpostagem\\TabPostagem.tsx",[],"C:\\Users\\ferre\\OneDrive\\Área de Trabalho\\blogPessoal_React\\src\\components\\postagens\\modalPostagem\\ModalPostagem.tsx",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":31,"column":27,"nodeType":"251","messageId":"252","endLine":31,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":34,"column":8,"nodeType":"255","endLine":34,"endColumn":20,"suggestions":"256"},{"ruleId":"249","severity":1,"message":"257","line":52,"column":27,"nodeType":"251","messageId":"252","endLine":52,"endColumn":29},{"ruleId":"249","severity":1,"message":"250","line":33,"column":26,"nodeType":"251","messageId":"252","endLine":33,"endColumn":28},{"ruleId":"253","severity":1,"message":"258","line":37,"column":16,"nodeType":"255","endLine":37,"endColumn":23,"suggestions":"259"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":17,"nodeType":"251","messageId":"252","endLine":20,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":34,"column":6,"nodeType":"255","endLine":34,"endColumn":13,"suggestions":"260"},{"ruleId":"249","severity":1,"message":"250","line":36,"column":14,"nodeType":"251","messageId":"252","endLine":36,"endColumn":16},{"ruleId":"249","severity":1,"message":"250","line":18,"column":14,"nodeType":"251","messageId":"252","endLine":18,"endColumn":16},{"ruleId":"261","severity":1,"message":"262","line":26,"column":21,"nodeType":"263","messageId":"264","endLine":26,"endColumn":89,"fix":"265"},{"ruleId":"261","severity":1,"message":"262","line":29,"column":21,"nodeType":"263","messageId":"264","endLine":29,"endColumn":91,"fix":"266"},{"ruleId":"261","severity":1,"message":"262","line":32,"column":21,"nodeType":"263","messageId":"264","endLine":32,"endColumn":97,"fix":"267"},{"ruleId":"261","severity":1,"message":"262","line":42,"column":21,"nodeType":"263","messageId":"264","endLine":42,"endColumn":77,"fix":"268"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":14,"nodeType":"251","messageId":"252","endLine":20,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":33,"column":6,"nodeType":"255","endLine":33,"endColumn":13,"suggestions":"269"},{"ruleId":"253","severity":1,"message":"270","line":47,"column":6,"nodeType":"255","endLine":47,"endColumn":20,"suggestions":"271"},{"ruleId":"249","severity":1,"message":"257","line":24,"column":19,"nodeType":"251","messageId":"252","endLine":24,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":38,"column":8,"nodeType":"255","endLine":38,"endColumn":15,"suggestions":"272"},{"ruleId":"253","severity":1,"message":"273","line":44,"column":8,"nodeType":"255","endLine":44,"endColumn":12,"suggestions":"274"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":15,"nodeType":"251","messageId":"252","endLine":20,"endColumn":17},{"ruleId":"253","severity":1,"message":"254","line":34,"column":6,"nodeType":"255","endLine":34,"endColumn":13,"suggestions":"275"},{"ruleId":"253","severity":1,"message":"276","line":48,"column":6,"nodeType":"255","endLine":48,"endColumn":20,"suggestions":"277"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":19,"nodeType":"251","messageId":"252","endLine":20,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":34,"column":8,"nodeType":"255","endLine":34,"endColumn":15,"suggestions":"278"},{"ruleId":"253","severity":1,"message":"273","line":40,"column":8,"nodeType":"255","endLine":40,"endColumn":12,"suggestions":"279"},{"ruleId":"249","severity":1,"message":"257","line":21,"column":19,"nodeType":"251","messageId":"252","endLine":21,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":35,"column":8,"nodeType":"255","endLine":35,"endColumn":15,"suggestions":"280"},{"ruleId":"253","severity":1,"message":"281","line":54,"column":8,"nodeType":"255","endLine":54,"endColumn":14,"suggestions":"282"},{"ruleId":"253","severity":1,"message":"283","line":61,"column":8,"nodeType":"255","endLine":61,"endColumn":12,"suggestions":"284"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":19,"nodeType":"251","messageId":"252","endLine":20,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":34,"column":8,"nodeType":"255","endLine":34,"endColumn":15,"suggestions":"285"},{"ruleId":"253","severity":1,"message":"273","line":40,"column":8,"nodeType":"255","endLine":40,"endColumn":12,"suggestions":"286"},{"ruleId":"245","replacedBy":"287"},{"ruleId":"247","replacedBy":"288"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":17,"nodeType":"251","messageId":"252","endLine":20,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":34,"column":6,"nodeType":"255","endLine":34,"endColumn":13,"suggestions":"289"},{"ruleId":"249","severity":1,"message":"250","line":33,"column":26,"nodeType":"251","messageId":"252","endLine":33,"endColumn":28},{"ruleId":"253","severity":1,"message":"258","line":37,"column":16,"nodeType":"255","endLine":37,"endColumn":23,"suggestions":"290"},{"ruleId":"249","severity":1,"message":"250","line":31,"column":27,"nodeType":"251","messageId":"252","endLine":31,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":34,"column":8,"nodeType":"255","endLine":34,"endColumn":20,"suggestions":"291"},{"ruleId":"249","severity":1,"message":"257","line":52,"column":27,"nodeType":"251","messageId":"252","endLine":52,"endColumn":29},{"ruleId":"249","severity":1,"message":"250","line":36,"column":14,"nodeType":"251","messageId":"252","endLine":36,"endColumn":16},{"ruleId":"292","severity":1,"message":"293","line":2,"column":8,"nodeType":"294","messageId":"295","endLine":2,"endColumn":21},{"ruleId":"249","severity":1,"message":"250","line":18,"column":14,"nodeType":"251","messageId":"252","endLine":18,"endColumn":16},{"ruleId":"261","severity":1,"message":"262","line":26,"column":21,"nodeType":"263","messageId":"264","endLine":26,"endColumn":76,"fix":"296"},{"ruleId":"261","severity":1,"message":"262","line":29,"column":21,"nodeType":"263","messageId":"264","endLine":29,"endColumn":89,"fix":"297"},{"ruleId":"261","severity":1,"message":"262","line":39,"column":21,"nodeType":"263","messageId":"264","endLine":39,"endColumn":77,"fix":"298"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":19,"nodeType":"251","messageId":"252","endLine":20,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":34,"column":8,"nodeType":"255","endLine":34,"endColumn":15,"suggestions":"299"},{"ruleId":"253","severity":1,"message":"273","line":40,"column":8,"nodeType":"255","endLine":40,"endColumn":12,"suggestions":"300"},{"ruleId":"249","severity":1,"message":"257","line":24,"column":19,"nodeType":"251","messageId":"252","endLine":24,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":38,"column":8,"nodeType":"255","endLine":38,"endColumn":15,"suggestions":"301"},{"ruleId":"253","severity":1,"message":"273","line":44,"column":8,"nodeType":"255","endLine":44,"endColumn":12,"suggestions":"302"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":14,"nodeType":"251","messageId":"252","endLine":20,"endColumn":16},{"ruleId":"253","severity":1,"message":"254","line":33,"column":6,"nodeType":"255","endLine":33,"endColumn":13,"suggestions":"303"},{"ruleId":"253","severity":1,"message":"270","line":47,"column":6,"nodeType":"255","endLine":47,"endColumn":20,"suggestions":"304"},{"ruleId":"249","severity":1,"message":"257","line":21,"column":19,"nodeType":"251","messageId":"252","endLine":21,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":35,"column":8,"nodeType":"255","endLine":35,"endColumn":15,"suggestions":"305"},{"ruleId":"253","severity":1,"message":"281","line":54,"column":8,"nodeType":"255","endLine":54,"endColumn":14,"suggestions":"306"},{"ruleId":"253","severity":1,"message":"283","line":61,"column":8,"nodeType":"255","endLine":61,"endColumn":12,"suggestions":"307"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":15,"nodeType":"251","messageId":"252","endLine":20,"endColumn":17},{"ruleId":"253","severity":1,"message":"254","line":34,"column":6,"nodeType":"255","endLine":34,"endColumn":13,"suggestions":"308"},{"ruleId":"253","severity":1,"message":"276","line":48,"column":6,"nodeType":"255","endLine":48,"endColumn":20,"suggestions":"309"},{"ruleId":"249","severity":1,"message":"257","line":20,"column":19,"nodeType":"251","messageId":"252","endLine":20,"endColumn":21},{"ruleId":"253","severity":1,"message":"254","line":34,"column":8,"nodeType":"255","endLine":34,"endColumn":15,"suggestions":"310"},{"ruleId":"253","severity":1,"message":"273","line":40,"column":8,"nodeType":"255","endLine":40,"endColumn":12,"suggestions":"311"},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["314"],"Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["315"],["316"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"317","text":"318"},{"range":"319","text":"318"},{"range":"320","text":"318"},{"range":"321","text":"318"},["322"],"React Hook useEffect has a missing dependency: 'getTema'. Either include it or remove the dependency array.",["323"],["324"],"React Hook useEffect has a missing dependency: 'findById'. Either include it or remove the dependency array.",["325"],["326"],"React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.",["327"],["328"],["329"],["330"],"React Hook useEffect has a missing dependency: 'postagem'. Either include it or remove the dependency array. You can also do a functional update 'setPostagem(p => ...)' if you only need 'postagem' in the 'setPostagem' call.",["331"],"React Hook useEffect has missing dependencies: 'findByIdPostagem' and 'getTemas'. Either include them or remove the dependency array.",["332"],["333"],["334"],["312"],["313"],["335"],["336"],["337"],"@typescript-eslint/no-unused-vars","'InstagramIcon' is defined but never used.","Identifier","unusedVar",{"range":"338","text":"318"},{"range":"339","text":"318"},{"range":"340","text":"318"},["341"],["342"],["343"],["344"],["345"],["346"],["347"],["348"],["349"],["350"],["351"],["352"],["353"],"no-global-assign","no-unsafe-negation",{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},[1192,1192]," rel=\"noreferrer\"",[1370,1370],[1555,1555],[2016,2016],{"desc":"358","fix":"360"},{"desc":"361","fix":"362"},{"desc":"358","fix":"363"},{"desc":"364","fix":"365"},{"desc":"358","fix":"366"},{"desc":"367","fix":"368"},{"desc":"358","fix":"369"},{"desc":"364","fix":"370"},{"desc":"358","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"358","fix":"376"},{"desc":"364","fix":"377"},{"desc":"358","fix":"378"},{"desc":"356","fix":"379"},{"desc":"354","fix":"380"},[1176,1176],[1350,1350],[1811,1811],{"desc":"358","fix":"381"},{"desc":"364","fix":"382"},{"desc":"358","fix":"383"},{"desc":"364","fix":"384"},{"desc":"358","fix":"385"},{"desc":"361","fix":"386"},{"desc":"358","fix":"387"},{"desc":"372","fix":"388"},{"desc":"374","fix":"389"},{"desc":"358","fix":"390"},{"desc":"367","fix":"391"},{"desc":"358","fix":"392"},{"desc":"364","fix":"393"},"Update the dependencies array to be: [history, userResult]",{"range":"394","text":"395"},"Update the dependencies array to be: [dispatch, history, token]",{"range":"396","text":"397"},"Update the dependencies array to be: [history, token]",{"range":"398","text":"399"},{"range":"400","text":"399"},"Update the dependencies array to be: [getTema, temas.length]",{"range":"401","text":"402"},{"range":"403","text":"399"},"Update the dependencies array to be: [findById, id]",{"range":"404","text":"405"},{"range":"406","text":"399"},"Update the dependencies array to be: [getPost, posts.length]",{"range":"407","text":"408"},{"range":"409","text":"399"},{"range":"410","text":"405"},{"range":"411","text":"399"},"Update the dependencies array to be: [postagem, tema]",{"range":"412","text":"413"},"Update the dependencies array to be: [findByIdPostagem, getTemas, id]",{"range":"414","text":"415"},{"range":"416","text":"399"},{"range":"417","text":"405"},{"range":"418","text":"399"},{"range":"419","text":"397"},{"range":"420","text":"395"},{"range":"421","text":"399"},{"range":"422","text":"405"},{"range":"423","text":"399"},{"range":"424","text":"405"},{"range":"425","text":"399"},{"range":"426","text":"402"},{"range":"427","text":"399"},{"range":"428","text":"413"},{"range":"429","text":"415"},{"range":"430","text":"399"},{"range":"431","text":"408"},{"range":"432","text":"399"},{"range":"433","text":"405"},[991,1003],"[history, userResult]",[1180,1187],"[dispatch, history, token]",[1133,1140],"[history, token]",[1092,1099],[1288,1302],"[getTema, temas.length]",[1288,1295],[1397,1401],"[findById, id]",[1116,1123],[1320,1334],"[getPost, posts.length]",[1199,1206],[1308,1312],[1359,1366],[1747,1753],"[postagem, tema]",[1886,1890],"[findByIdPostagem, getTemas, id]",[1216,1223],[1325,1329],[1133,1140],[1180,1187],[991,1003],[1199,1206],[1308,1312],[1288,1295],[1397,1401],[1092,1099],[1288,1302],[1359,1366],[1747,1753],[1886,1890],[1116,1123],[1320,1334],[1216,1223],[1325,1329]]