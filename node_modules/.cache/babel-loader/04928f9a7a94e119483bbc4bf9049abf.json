{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferre\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\blogPessoal_React\\\\src\\\\components\\\\Temas\\\\CadastroTema\\\\Cadastro.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\nimport { buscaId, post, put } from '../../../services/Service';\nimport './CadastroTema.css';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CadastroTema() {\n  _s();\n\n  let history = useHistory();\n  const {\n    id\n  } = useParams();\n  const token = useSelector(state => state.tokens);\n  const [tema, setTema] = useState({\n    id: 0,\n    descricao: ''\n  });\n  useEffect(() => {\n    if (token === \"\") {\n      toast.error('Você precisa estar logado!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        theme: \"colored\",\n        progress: undefined\n      });\n      history.push(\"/login\");\n    }\n  }, [token]);\n  useEffect(() => {\n    if (id !== undefined) {\n      findById(id);\n    }\n  }, [id]);\n\n  async function findById(id) {\n    buscaId(`/temas/${id}`, setTema, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  function updatedTema(e) {\n    setTema({ ...tema,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    console.log(\"tema\" + JSON.stringify(tema));\n\n    if (id !== undefined) {\n      console.log(tema);\n      put(`/temas`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      toast.success('Tema atualizado com sucesso!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        theme: \"colored\",\n        progress: undefined\n      });\n    } else {\n      post(`/temas`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      toast.success('Tema cadastrado com sucesso!', {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: false,\n        theme: \"colored\",\n        progress: undefined\n      });\n    }\n\n    back();\n  }\n\n  function back() {\n    history.push('/temas');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"topo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"textSecondary\",\n        component: \"h1\",\n        align: \"center\",\n        children: \"Formul\\xE1rio de cadastro tema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: tema.descricao,\n        onChange: e => updatedTema(e),\n        id: \"descricao\",\n        label: \"Tema\",\n        variant: \"outlined\",\n        name: \"descricao\",\n        margin: \"normal\",\n        fullWidth: true,\n        placeholder: \"Minimo de 5 e m\\xE1ximo de 100 caracteres\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CadastroTema, \"FCC+rqjZ3KGSf+Y+hJ/BxvQEbHo=\", false, function () {\n  return [useHistory, useParams, useSelector];\n});\n\n_c = CadastroTema;\nexport default CadastroTema;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroTema\");","map":{"version":3,"sources":["C:/Users/ferre/OneDrive/Área de Trabalho/blogPessoal_React/src/components/Temas/CadastroTema/Cadastro.tsx"],"names":["React","useState","useEffect","Container","Typography","TextField","Button","buscaId","post","put","useHistory","useParams","useSelector","toast","CadastroTema","history","id","token","state","tokens","tema","setTema","descricao","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","progress","undefined","push","findById","headers","updatedTema","e","target","name","value","onSubmit","preventDefault","console","log","JSON","stringify","success","back"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, ChangeEvent} from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../services/Service';\r\n\r\nimport './CadastroTema.css';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\n\r\n\r\nfunction CadastroTema() {\r\n    let history = useHistory();\r\n    const {id} = useParams<{id: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    );\r\n\r\n    const[tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if(token === \"\"){\r\n            toast.error('Você precisa estar logado!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n            history.push(\"/login\");\r\n        }\r\n    }, [token]) \r\n\r\n    useEffect(() => { \r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    },[ id ])\r\n\r\n    async function findById(id: string  ){\r\n        buscaId(`/temas/${id}`, setTema, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedTema(e: ChangeEvent<HTMLInputElement>){\r\n        setTema({\r\n            ...tema,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n        e.preventDefault();\r\n        console.log(\"tema\" + JSON.stringify(tema));\r\n\r\n        if(id !== undefined){\r\n            console.log(tema);\r\n            put(`/temas`, tema, setTema, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Tema atualizado com sucesso!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n        }else{\r\n            post(`/temas`, tema, setTema, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            toast.success('Tema cadastrado com sucesso!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n        }\r\n        back();\r\n    }\r\n\r\n    function back(){\r\n        history.push('/temas')\r\n    }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro tema</Typography>\r\n                <TextField value={tema.descricao} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)} id=\"descricao\" label=\"Tema\" variant=\"outlined\" name=\"descricao\" margin=\"normal\" fullWidth placeholder=\"Minimo de 5 e máximo de 100 caracteres\" required/>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;"]},"metadata":{},"sourceType":"module"}